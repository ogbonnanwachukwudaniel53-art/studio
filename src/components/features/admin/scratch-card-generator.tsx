
"use client";

import React, { useState, useRef } from "react";
import { useReactToPrint } from "react-to-print";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table";
import { Badge } from "@/components/ui/badge";
import { Ticket, Copy, Check, Printer } from "lucide-react";
import { mockScratchCards, mockStudents } from "@/lib/mock-data";
import { useToast } from "@/hooks/use-toast";
import { useSchool } from "@/lib/school-context";
import { Logo } from "@/components/logo";

// Component for the printable PIN sheet
const PrintablePinSheet = React.forwardRef<HTMLDivElement, {}>((props, ref) => {
    const { schoolName } = useSchool();
    const cardsWithStudentData = mockScratchCards.map(card => {
        const student = mockStudents.find(s => s.id === card.studentId);
        return { ...card, studentName: student?.name, studentClass: student?.class };
    });

    return (
        <div ref={ref} className="p-8 text-black bg-white">
            <header className="flex items-center justify-between pb-4 border-b-2 border-black">
                <div className="flex items-center gap-3">
                    <Logo className="h-16 w-16 text-black" />
                    <div>
                        <h1 className="text-3xl font-bold font-headline">{schoolName}</h1>
                        <p className="text-sm">Student Result PINs</p>
                    </div>
                </div>
                <div className="text-right">
                    <h2 className="text-lg font-semibold">Session: 2023/2024</h2>
                    <h2 className="text-lg font-semibold">Term: First Term</h2>
                </div>
            </header>
            <div className="mt-8 grid grid-cols-2 md:grid-cols-3 gap-4">
                {cardsWithStudentData.map(card => (
                    <div key={card.id} className="p-4 border border-dashed border-black rounded-lg text-sm break-all">
                        <p><strong>Name:</strong> {card.studentName}</p>
                        <p><strong>Class:</strong> {card.studentClass}</p>
                        <p><strong>Reg No:</strong> {card.studentId}</p>
                        <p className="mt-2 pt-2 border-t border-dashed"><strong>PIN:</strong> <span className="font-bold font-mono text-base">{card.pin}</span></p>
                    </div>
                ))}
            </div>
             <footer className="mt-12 text-center text-xs text-gray-500">
                Generated by EduResult Pro on {new Date().toLocaleDateString()}
            </footer>
        </div>
    );
});
PrintablePinSheet.displayName = 'PrintablePinSheet';


export function ScratchCardGenerator() {
  const [cards] = useState(mockScratchCards);
  const [copiedPin, setCopiedPin] = useState<string | null>(null);
  const { toast } = useToast();
  const componentRef = useRef<HTMLDivElement>(null);

  const handleCopyPin = (pin: string) => {
    navigator.clipboard.writeText(pin).then(() => {
        setCopiedPin(pin);
        toast({ title: "PIN Copied!", description: "The PIN has been copied to your clipboard." });
        setTimeout(() => setCopiedPin(null), 2000);
    });
  }

  const handlePrint = useReactToPrint({
      content: () => componentRef.current,
      documentTitle: "Student-Result-PINs",
      onAfterPrint: () => toast({ title: "Print Job Sent", description: "Your student PIN list has been sent to the printer." })
  });

  return (
    <Card id="scratch-cards">
      <CardHeader>
        <div className="flex items-center justify-between">
            <div className="flex items-center gap-3">
                <Ticket className="h-6 w-6 text-primary" />
                <CardTitle className="font-headline">Student PIN Management</CardTitle>
            </div>
             <Button onClick={handlePrint}>
                <Printer className="mr-2 h-4 w-4" />
                Print All PINs
            </Button>
        </div>
        <CardDescription>View and print the auto-generated PINs for each student for the current session/term.</CardDescription>
      </CardHeader>
      <CardContent>
          <div className="space-y-2">
            <h3 className="font-medium">Student PINs for First Term, 2023/2024</h3>
            <div className="max-h-[60vh] overflow-auto rounded-md border">
              <Table>
                <TableHeader>
                  <TableRow>
                    <TableHead>Student Name</TableHead>
                    <TableHead>Registration No.</TableHead>
                    <TableHead>PIN</TableHead>
                    <TableHead>Status</TableHead>
                  </TableRow>
                </TableHeader>
                <TableBody>
                  {cards.map(card => {
                    const student = mockStudents.find(s => s.id === card.studentId);
                    return (
                        <TableRow key={card.id}>
                          <TableCell className="font-medium">{student?.name}</TableCell>
                          <TableCell>{card.studentId}</TableCell>
                          <TableCell className="font-mono">
                            <div className="flex items-center gap-2">
                                <span>{card.pin}</span>
                                <Button 
                                    variant="ghost" 
                                    size="icon" 
                                    className="h-7 w-7"
                                    onClick={() => handleCopyPin(card.pin)}
                                >
                                    {copiedPin === card.pin ? (
                                        <Check className="h-4 w-4 text-green-500" />
                                    ) : (
                                        <Copy className="h-4 w-4" />
                                    )}
                                    <span className="sr-only">Copy PIN</span>
                                </Button>
                            </div>
                          </TableCell>
                          <TableCell>
                            <Badge variant={card.used ? 'secondary' : 'default'} className={!card.used ? "bg-green-600" : ""}>
                                {card.used ? 'Activated' : 'Not Used'}
                            </Badge>
                          </TableCell>
                        </TableRow>
                    )
                  })}
                </TableBody>
              </Table>
            </div>
          </div>
          <div style={{ display: 'none' }}>
              <PrintablePinSheet ref={componentRef} />
          </div>
      </CardContent>
    </Card>
  );
}
